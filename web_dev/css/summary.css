/* 
A. Introduction to CSS:

What is CSS?
============

CSS defines how elements should be rendered on the 
screen, in print, or by other media. It allows
developers to style web pages independently from 
the structure, (HTML).

History and Evolution of CSS

CSS has evolved through various levels:
CSS1 (1996): The first official specification by 
the World Wide Web Consortium (W3C). It introduced 
basic styling features.

CSS2 (1998): Added new features like positioning, 
z-index, media types, and downloadable fonts.

CSS2.1 (2011): An update to CSS2 that refined and 
corrected the CSS2 specification.

CSS3 (Late 2000s-Present): Introduced modules allowing 
independent updates. Features include rounded corners, 
shadows, gradients, transitions, animations, and much 
more.

CSS4 (Ongoing): Rather than a single specification, 
CSS4 is more of a collection of modules that continue 
to evolve.

How CSS Integrates with HTML

CSS integrates with HTML in three main ways:
1. Inline CSS: 
Styles are applied directly to HTML elements 
using the style attribute. Example:

<p 
    style="color: blue; font-size: 14px;"
>
    This is a blue paragraph.
</p>

2. Internal CSS: 
Styles are defined within the <style> element in 
the <head> section of an HTML document. Example:

<head>
    <style>
        p {
            color: green;
            font-size: 16px;
        }
    </style>
</head>

3. External CSS: 
Styles are written in a separate CSS file and linked 
to an HTML document using the <link> element. This is 
the most preferred way as it keeps HTML and CSS separate. 
Example:

<head>
    <link rel="stylesheet" type="text/css" href="styles.css">
</head>


CSS Syntax Selectors Properties
===============================
CSS syntax is structured into three main parts:

Selector: Identifies the HTML element(s) to be styled.

Property: Specifies the aspect of the element to be 
styled (e.g., color, font-size, margin).

Value: Defines the style for the property.

The basic structure of a CSS rule is:

selector {
    property: value;
}

For example:

p {
    color: red;
    font-size: 16px;
}

This rule applies to all <p> elements, setting their 
text color to red and font size to 16 pixels.

Basic Selectors:
Element Selector: Targets all instances of a given 
HTML element.

h1 {
    color: blue;
}

This rule changes the text color of all <h1> elements 
to blue.

Class Selector:
Targets elements with a specific class attribute. It 
is defined using a dot (.) followed by the class name.

.highlight {
    background-color: yellow;
}

This rule applies a yellow background to all elements with 
the class highlight.

ID Selector: 
Targets a single element with a specific ID attribute. 
It is defined using a hash (#) followed by the ID name.

#main-title {
    font-weight: bold;
}

This rule makes the text of the element with the ID 
main-title bold.

Grouping and Combining Selectors:

Grouping Selectors: 
Multiple selectors can be grouped to apply the same 
style to different elements.

h1, h2, h3 {
    color: green;
}

This rule applies a green color to all <h1>, <h2>, 
and <h3> elements.


Combining Selectors: 
You can combine selectors to target elements more 
specifically.





Descendant Selector: Targets elements inside other elements.

ul li {
    color: purple;
}


This rule changes the text color of all <li> elements inside a <ul> to purple.





Child Selector: Targets immediate child elements.

div > p {
    font-style: italic;
}


This rule italicizes the text of <p> elements that are direct children of a <div>.





Adjacent Sibling Selector: Targets elements immediately following a specified element.

h2 + p {
    margin-top: 20px;
}


This rule adds a 20-pixel top margin to <p> elements immediately following an <h2>.





General Sibling Selector: Targets all siblings following a specified element.

h2 ~ p {
    font-size: 14px;
}


This rule changes the font size of all <p> elements that follow an <h2>.




























Methods of Applying CSS:
========================


CSS Units and Values:
=====================


The Box Model:
==============




B. Text and Font Styling:


Font Properties:
================


Working with Web Fonts:
=======================


Colors and Background:
======================


List and Table Styling:
=======================


Text effects:
=============




C. Layout and Positioning:


Display and Positioning:
========================


Floating and Clearing:
======================


Flexbox:
========


CSS Grid Layout:
================


Responsive Design with Media Queries:
=====================================




D. Advanced CSS Techniques



CSS Animations:
===============


CSS Transitions and Transforms:
===============================


Psudo classes and Pseudo elements:
==================================

CSS Variables and Custom Properties:
====================================


CSS Prepropressors:
===================



E. Performance and Optimization:


Minifying and Compressing CSS:
==============================


Critical CSS and Lazy loading:
==============================


Browser Compatibility and CSS:
==============================


Debugging CSS:
==============


Best Practices for Maintainable CSS:
====================================








*/
